trigger:
  batch: true
  branches:
    include:
    - master
    - develop
  paths:
    include:
    - 'DryWetMidi/*'
    - 'DryWetMidi.Tests/*'
    - 'DryWetMidi.Tests.Common/*'
    - 'Resources/CI/mac-test-netcore-core.yaml'
    - 'Resources/CI/Templates/stage-build-native-libs.yaml'
    - 'Resources/CI/Templates/step-copy-native-libraries-near-csproj.yaml'
    - 'Resources/CI/Templates/step-collect-logs.yaml'
    exclude:
    - 'DryWetMidi/Devices/*'
    - 'DryWetMidi.Tests/Devices/*'

pr:
  branches:
    include:
    - develop
  paths:
    include:
    - 'DryWetMidi/*'
    - 'DryWetMidi.Tests/*'
    - 'DryWetMidi.Tests.Common/*'
    - 'Resources/CI/mac-test-netcore-core.yaml'
    - 'Resources/CI/Templates/stage-build-native-libs.yaml'
    - 'Resources/CI/Templates/step-copy-native-libraries-near-csproj.yaml'
    - 'Resources/CI/Templates/step-collect-logs.yaml'
    exclude:
    - 'DryWetMidi/Devices/*'
    - 'DryWetMidi.Tests/Devices/*'

pool:
  vmImage: 'macOS-latest'

variables:
- group: DryWetMIDI-Common-Variables
- name: solution
  value: '**/*.sln'
- name: buildPlatform
  value: 'Any CPU'
- name: buildConfiguration
  value: 'Release'

name: macOS_Test_NetCore_Core_$(LibraryVersion)$(Rev:.r)

stages:
- template: Templates/stage-build-native-libs.yaml

- stage: RunTests
  displayName: Run tests
  pool:
    vmImage: 'macOS-latest'
  jobs:
  - job: RunTests
    displayName: Run tests
    steps:
    - template: Templates/step-copy-native-libraries-near-csproj.yaml
    
    - task: UseDotNet@2
      displayName: 'Use .NET Core 3.1'
      inputs:
        packageType: sdk
        version: '3.1.410'
        installationPath: $(Agent.ToolsDirectory)/dotnet
    
    - task: DotNetCoreCLI@2
      displayName: Build DryWetMidi and DryWetMidi.Tests.Common
      inputs:
        command: 'build'
        arguments: '--configuration $(buildConfiguration) --framework netstandard2.0'
        projects: |
          DryWetMidi/Melanchall.DryWetMidi.csproj
          DryWetMidi.Tests.Common/Melanchall.DryWetMidi.Tests.Common.csproj
    
    - task: DotNetCoreCLI@2
      displayName: Build DryWetMidi.Tests
      inputs:
        command: 'build'
        arguments: '--configuration $(buildConfiguration) --framework netcoreapp3.1'
        projects: |
          DryWetMidi.Tests/Melanchall.DryWetMidi.Tests.csproj
    
    - task: DotNetCoreCLI@2
      displayName: Run unit tests
      continueOnError: false
      inputs:
        command: 'test'
        projects: 'DryWetMidi.Tests/Melanchall.DryWetMidi.Tests.csproj'
        arguments: '--blame --no-build --configuration $(buildConfiguration) --filter ((FullyQualifiedName~Melanchall.DryWetMidi.Tests.Core|FullyQualifiedName~Melanchall.DryWetMidi.Tests.Common|FullyQualifiedName~Melanchall.DryWetMidi.Tests.Composing|FullyQualifiedName~Melanchall.DryWetMidi.Tests.Interaction|FullyQualifiedName~Melanchall.DryWetMidi.Tests.MusicTheory|FullyQualifiedName~Melanchall.DryWetMidi.Tests.Standards|FullyQualifiedName~Melanchall.DryWetMidi.Tests.Tools)&Name!=CheckValidFilesReadingByReferences) --framework netcoreapp3.1 --verbosity normal -d diagnostic.log'
        
    - template: Templates/step-collect-logs.yaml
